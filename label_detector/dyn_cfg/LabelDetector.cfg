#!/usr/bin/env python
PACKAGE = "label_detector" 

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("Debugging",   bool_t,   0, "Debugging mode on/off",  False)

# QR CONFIGURATION
gen.add("QR_Switch",   bool_t,   0, "enable/disable qrcode detection",  True)
gen.add("QR_Debugging",   bool_t,   0, "enable/disable qrcode-scanning debugging",  False)
gen.add("Qrcode_side_length",    int_t,    0, "The width of QrCode's square in mm", 182,  0, 500)
gen.add("QR_Canny_par1",    int_t,    0, "Canny: first threshold for the hysteresis procedure", 100,  0, 500)
gen.add("QR_Canny_par2",    int_t,    0, "Canny: first threshold for the hysteresis procedure", 200,  0, 500)



# HZL CONFIGURATION
gen.add("HZL_Switch",   bool_t,   0, "enable/disable hazardous label detection",  True)
gen.add("HZL_Debugging",   bool_t,   0, "enable/disable hazardous label-scanning debugging",  False)
gen.add("Hzl_Canny_par1",    int_t,    0, "Canny: first threshold for the hysteresis procedure", 100,  0, 500)
gen.add("Hzl_Canny_par2",    int_t,    0, "Canny: first threshold for the hysteresis procedure", 200,  0, 500)

matching_method_enum = gen.enum([  gen.const("matchTemplate",      int_t, 0, "Known side size"),
								   gen.const("customMatching",     int_t, 1, "Using ray trassing")],
								   "Select matching method")
gen.add("Hzl_matching_method", int_t, 0, "An enum to set the matching method", 0, 0, 1, edit_method=matching_method_enum)

hzl_template_matching_method_enum = gen.enum([ gen.const("SQDIFF",      int_t, 0, "Known side size"),
				                      gen.const("SQDIFF_NORMED",     int_t, 1, "Using ray trassing"),
				                      gen.const("TM_CCORR",     int_t, 2, "Using ray trassing"),
				                      gen.const("TM_CCORR_NORMED",     int_t, 3, "Using ray trassing"),
				                      gen.const("COEFF",     int_t, 4, "Using ray trassing"),
				                      gen.const("COEFF_NORMED",     int_t, 5, "Using ray trassing")],
				                      "An enum to set the matching method")
gen.add("Hzl_template_matching_method", int_t, 0, "An enum to set the localizing method", 0, 0, 6, edit_method=hzl_template_matching_method_enum)

gen.add("Hzl_enable_color_matching",   bool_t,   0, "enable/disable histogram matching",  True)


# OTHER CONFIGURATION
tracking_method_enum = gen.enum([ gen.const("Based_on_size",      int_t, 0, "Known side size"),
                       gen.const("Ray_trassing",     int_t, 1, "Using ray trassing")],
                       "An enum to set the localizing method")
gen.add("Localizing_method", int_t, 0, "An enum to set the localizing method", 0, 0, 1, edit_method=tracking_method_enum)

group = gen.add_group("Group One", state = True)
group.add("group1_int", int_t, 1, "A second level group parameter", 2)

group2 = gen.add_group("Group Two", type="collapse", state = True)
group2.add("HZL_Switch2",   bool_t,   0, "enable/disable hazardous label detection",  True)


exit(gen.generate(PACKAGE, "label_detector", "LabelDetector"))
